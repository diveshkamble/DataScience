Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> a =np.array([(1,2,3),(2,3,4)])

Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    a =np.array([(1,2,3),(2,3,4)])
NameError: name 'np' is not defined
>>> import numpy as np
>>> a =np.array([(1,2,3),(2,3,4)])

>>> print(a.ndim)

2
>>> a=np.array([(1,2,3,4),(3,4,5,6)])

>>> print(a)

[[1 2 3 4]
 [3 4 5 6]]
>>> a=a.reshape(4,2)

>>> a
array([[1, 2],
       [3, 4],
       [3, 4],
       [5, 6]])
>>> a=np.array([(1,2,3,4),(3,4,5,6)])

>>> print(a[0,2])

3
>>> print(a[0:2,3])#print 3 rd element from row 0 to 1

[4 6]
>>> a=np.array([(1,2,3,4),(3,4,5,6),(7,8,9,10)])

>>> print(a[0:2,3])#print 3 rd element from row 0 to 1

[4 6]
>>> print(a[0:3,3])#print 3 rd element from row 0 to 1
[ 4  6 10]
>>> a = np.linspace(1,3,5)#print five values which are equally spaced between 1 to 3

>>> a
array([1. , 1.5, 2. , 2.5, 3. ])
>>> a = np.linspace(1,3,100)#print five values which are equally spaced between 1 to 3
>>> a
array([1.        , 1.02020202, 1.04040404, 1.06060606, 1.08080808,
       1.1010101 , 1.12121212, 1.14141414, 1.16161616, 1.18181818,
       1.2020202 , 1.22222222, 1.24242424, 1.26262626, 1.28282828,
       1.3030303 , 1.32323232, 1.34343434, 1.36363636, 1.38383838,
       1.4040404 , 1.42424242, 1.44444444, 1.46464646, 1.48484848,
       1.50505051, 1.52525253, 1.54545455, 1.56565657, 1.58585859,
       1.60606061, 1.62626263, 1.64646465, 1.66666667, 1.68686869,
       1.70707071, 1.72727273, 1.74747475, 1.76767677, 1.78787879,
       1.80808081, 1.82828283, 1.84848485, 1.86868687, 1.88888889,
       1.90909091, 1.92929293, 1.94949495, 1.96969697, 1.98989899,
       2.01010101, 2.03030303, 2.05050505, 2.07070707, 2.09090909,
       2.11111111, 2.13131313, 2.15151515, 2.17171717, 2.19191919,
       2.21212121, 2.23232323, 2.25252525, 2.27272727, 2.29292929,
       2.31313131, 2.33333333, 2.35353535, 2.37373737, 2.39393939,
       2.41414141, 2.43434343, 2.45454545, 2.47474747, 2.49494949,
       2.51515152, 2.53535354, 2.55555556, 2.57575758, 2.5959596 ,
       2.61616162, 2.63636364, 2.65656566, 2.67676768, 2.6969697 ,
       2.71717172, 2.73737374, 2.75757576, 2.77777778, 2.7979798 ,
       2.81818182, 2.83838384, 2.85858586, 2.87878788, 2.8989899 ,
       2.91919192, 2.93939394, 2.95959596, 2.97979798, 3.        ])
>>> print(a.dtype)

float64
>>> a=np.array([(1,2,3),(3,4,5)])

>>> print(a.sum(axis=0)) #print sum of all columns
[4 6 8]
>>> print(a.sum(axis=1)) #print sum of all columns
[ 6 12]
>>> a=np.array([(1,2,3),(3,4,5)])

>>> print(np.sqrt(a))

[[1.         1.41421356 1.73205081]
 [1.73205081 2.         2.23606798]]
>>> print(np.std(a))

1.2909944487358056
>>> a=np.array([(1,2,3),(3,4,5)])

>>> b=np.array([(1,2,3),(3,4,5)])

>>> print(np.vstack((a,b))) 

[[1 2 3]
 [3 4 5]
 [1 2 3]
 [3 4 5]]
>>> print(a+b)

[[ 2  4  6]
 [ 6  8 10]]
>>> a=np.array([(1,2,3),(3,4,5)])

>>> b=np.array([(1,2,3),(3,4,5)])

>>> a
array([[1, 2, 3],
       [3, 4, 5]])
>>> b
array([[1, 2, 3],
       [3, 4, 5]])
>>> print(np.vstack((a,b))) 

[[1 2 3]
 [3 4 5]
 [1 2 3]
 [3 4 5]]
>>> print(np.hstack((a,b)))

[[1 2 3 1 2 3]
 [3 4 5 3 4 5]]
>>> 
